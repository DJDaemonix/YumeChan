@page "/BotControls"
@attribute [Authorize]

@using Nodsoft.YumeChan.NetRunner.Controls.Assets;
@using Nodsoft.YumeChan.NetRunner.Models;
@using Nodsoft.YumeChan.Core;

@inject YumeCore BotService

<h1>Bot Controls</h1>

<br />

<div class="card-group">
    <div class="card">
        <h3 class="card-header">Core</h3>

        <div class="card-body">
            <div class="d-flex justify-content-between">
                <div class="p-2 bd-highlight">
                    <p><b>Core Version :</b> @YumeCore.CoreVersion.ToString()</p>
                </div>
                <div class="p-2 bd-highlight"><p class=@DisplayStatusAlert()[0]>@DisplayStatusAlert()[1]</p></div>
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-success" @onclick="StartBotButton">Start Bot Service</button>
            <button class="btn btn-danger" @onclick="StopBotButton">Stop Bot Service</button>
            <button class="btn btn-warning" @onclick="RestartBotButton">Restart Bot Service</button>
        </div>
    </div>

    <div class="card">
        <h3 class="card-header">Modules</h3>
        <div class="card-body">
            <div class="d-flex justify-content-between">
                <div class="p-2 bd-highlight">
                    <p><b>PluginBase Version :</b> @typeof(Nodsoft.YumeChan.PluginBase.Plugin).Assembly.GetName().Version.ToString()</p>
                </div>
                <div class="p-2 bd-highlight">
                    <p><b>Loaded Plugins :</b> @BotService.Plugins.Count</p>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-info" @onclick="ReloadModulesButton">Reload Modules</button>
        </div>
    </div>
</div>

<br />
<br />

<h4>Bot Status :</h4>

<EditForm Model="Model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="text">Change Text :</label>
        <InputText Id="text" Class="form-control" @bind-Value="Model.StatusMessage" />
    </div>

    <button class="btn btn-outline-info" type="submit">Change</button>
</EditForm>


@code
{
    private string[] DisplayStatusAlert()
    {
        return BotService.CoreState switch
        {
            YumeCoreState.Offline => new string[]   { "text-danger", "Bot is offline." },
            YumeCoreState.Online => new string[]    { "text-success", "Bot is online." },
            YumeCoreState.Starting => new string[]  { "text-info", "Bot is starting..." },
            YumeCoreState.Stopping => new string[]  { "text-warning", "Bot is Stopping..." },
            YumeCoreState.Reloading => new string[] { "text-warning", "Bot is Reloading..." },
            _ => new string[]                       { "text-danger", "Bot Status is Unknown." },
        };
    }


    public async Task StartBotButton()
    {
        if (BotService.CoreState == YumeCoreState.Offline)
        {
            await BotService.StartBotAsync();
        }
    }

    public async Task StopBotButton()
    {
        if (BotService.CoreState != YumeCoreState.Offline)
        {
            await BotService.StopBotAsync();
        }
    }

    public async Task RestartBotButton()
    {
        if (BotService.CoreState == YumeCoreState.Online)
        {
            await BotService.RestartBotAsync();
        }
    }

    public async Task ReloadModulesButton()
    {
        if (BotService.CoreState == YumeCoreState.Online)
        {
            await BotService.ReloadCommandsAsync();
        }
    }


    StatusModel Model = new StatusModel();

    protected void HandleValidSubmit()
    {
        BotService.Client.SetGameAsync(Model.StatusMessage);
    }
}